{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shuhaib\\\\OneDrive\\\\Desktop\\\\test-codes\\\\code-3\\\\geojson-viewer\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport MapView from './MapView';\nimport logo from './images/logo-chakra.jpg'; // Import the logo image\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [geoJsonData, setGeoJsonData] = useState(null);\n  const [editGeoJsonData, setEditGeoJsonData] = useState(null);\n  const [currentMode, setCurrentMode] = useState('view');\n  const [unsavedFeature, setUnsavedFeature] = useState(null);\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        try {\n          const data = JSON.parse(reader.result);\n          setGeoJsonData(data);\n          setEditGeoJsonData(data);\n        } catch (error) {\n          console.error('Error parsing GeoJSON file', error);\n          alert('Error parsing GeoJSON file. Please ensure it is valid.');\n        }\n      };\n      reader.readAsText(file);\n    }\n  };\n  const handleAddIcon = coordinates => {\n    if (currentMode === 'edit' && editGeoJsonData) {\n      const newIcon = {\n        type: 'Feature',\n        properties: {\n          icon: 'red-circle',\n          info: 'New Icon'\n        },\n        geometry: {\n          type: 'Point',\n          coordinates\n        }\n      };\n      const updatedGeoJsonData = {\n        ...editGeoJsonData,\n        features: [...(editGeoJsonData.features || []), newIcon]\n      };\n      setEditGeoJsonData(updatedGeoJsonData);\n      setUnsavedFeature(newIcon);\n      return newIcon;\n    }\n    return null;\n  };\n  const handleEdit = () => {\n    setCurrentMode('edit');\n  };\n  const handleSave = () => {\n    if (editGeoJsonData) {\n      setGeoJsonData(editGeoJsonData);\n      setCurrentMode('view');\n      setUnsavedFeature(null);\n    }\n  };\n  const handleView = () => {\n    setCurrentMode('view');\n    setEditGeoJsonData(geoJsonData); // Revert to the last saved state\n    setUnsavedFeature(null);\n  };\n  const clearUnsavedFeature = () => {\n    setUnsavedFeature(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"heading-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: \"Logo\",\n          className: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"heading\",\n          children: \"Map Viewer & Editor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MapView, {\n      geoJsonData: geoJsonData,\n      editGeoJsonData: editGeoJsonData,\n      currentMode: currentMode,\n      onAddIcon: handleAddIcon,\n      clearUnsavedFeature: clearUnsavedFeature\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"loadfile\",\n        accept: \".geojson\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"loadfile\",\n        children: \"Upload GeoJSON File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: currentMode === 'edit' ? 'edit-mode' : '',\n        onClick: handleEdit,\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: currentMode === 'view' && !unsavedFeature ? 'save-mode' : '',\n        onClick: handleSave,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: currentMode === 'view' ? 'view-mode' : '',\n        onClick: handleView,\n        children: \"View\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"1fccJD+BVOHVnDqcMTQHL//6JDg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MapView","logo","jsxDEV","_jsxDEV","App","_s","geoJsonData","setGeoJsonData","editGeoJsonData","setEditGeoJsonData","currentMode","setCurrentMode","unsavedFeature","setUnsavedFeature","handleFileChange","e","file","target","files","reader","FileReader","onloadend","data","JSON","parse","result","error","console","alert","readAsText","handleAddIcon","coordinates","newIcon","type","properties","icon","info","geometry","updatedGeoJsonData","features","handleEdit","handleSave","handleView","clearUnsavedFeature","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onAddIcon","id","accept","onChange","htmlFor","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Shuhaib/OneDrive/Desktop/test-codes/code-3/geojson-viewer/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport MapView from './MapView';\nimport logo from './images/logo-chakra.jpg'; // Import the logo image\n\nfunction App() {\n  const [geoJsonData, setGeoJsonData] = useState(null);\n  const [editGeoJsonData, setEditGeoJsonData] = useState(null);\n  const [currentMode, setCurrentMode] = useState('view');\n  const [unsavedFeature, setUnsavedFeature] = useState(null);\n\n  const handleFileChange = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        try {\n          const data = JSON.parse(reader.result);\n          setGeoJsonData(data);\n          setEditGeoJsonData(data);\n        } catch (error) {\n          console.error('Error parsing GeoJSON file', error);\n          alert('Error parsing GeoJSON file. Please ensure it is valid.');\n        }\n      };\n      reader.readAsText(file);\n    }\n  };\n\n  const handleAddIcon = (coordinates) => {\n    if (currentMode === 'edit' && editGeoJsonData) {\n      const newIcon = {\n        type: 'Feature',\n        properties: { icon: 'red-circle', info: 'New Icon' },\n        geometry: {\n          type: 'Point',\n          coordinates,\n        },\n      };\n      const updatedGeoJsonData = {\n        ...editGeoJsonData,\n        features: [...(editGeoJsonData.features || []), newIcon],\n      };\n      setEditGeoJsonData(updatedGeoJsonData);\n      setUnsavedFeature(newIcon);\n      return newIcon;\n    }\n    return null;\n  };\n\n  const handleEdit = () => {\n    setCurrentMode('edit');\n  };\n\n  const handleSave = () => {\n    if (editGeoJsonData) {\n      setGeoJsonData(editGeoJsonData);\n      setCurrentMode('view');\n      setUnsavedFeature(null);\n    }\n  };\n\n  const handleView = () => {\n    setCurrentMode('view');\n    setEditGeoJsonData(geoJsonData); // Revert to the last saved state\n    setUnsavedFeature(null);\n  };\n\n  const clearUnsavedFeature = () => {\n    setUnsavedFeature(null);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className=\"heading-container\">\n          <img src={logo} alt=\"Logo\" className=\"logo\" />\n          <h1 className=\"heading\">Map Viewer & Editor</h1>\n        </div>\n      </header>\n      <MapView\n        geoJsonData={geoJsonData}\n        editGeoJsonData={editGeoJsonData}\n        currentMode={currentMode}\n        onAddIcon={handleAddIcon}\n        clearUnsavedFeature={clearUnsavedFeature}\n      />\n      <div className=\"upload-container\">\n        <input\n          type=\"file\"\n          id=\"loadfile\"\n          accept=\".geojson\"\n          onChange={handleFileChange}\n        />\n        <label htmlFor=\"loadfile\">Upload GeoJSON File</label>\n      </div>\n      <div>\n        <button\n          className={currentMode === 'edit' ? 'edit-mode' : ''}\n          onClick={handleEdit}\n        >\n          Edit\n        </button>\n        <button\n          className={currentMode === 'view' && !unsavedFeature ? 'save-mode' : ''}\n          onClick={handleSave}\n        >\n          Save\n        </button>\n        <button\n          className={currentMode === 'view' ? 'view-mode' : ''}\n          onClick={handleView}\n        >\n          View\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}