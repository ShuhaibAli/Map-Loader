{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shuhaib\\\\OneDrive\\\\Desktop\\\\test-codes\\\\code-3\\\\geojson-viewer\\\\src\\\\MapView.js\",\n  _s = $RefreshSig$();\n// src/MapView.js\n\nimport React, { useEffect, useRef, useState, useCallback } from 'react';\nimport 'ol/ol.css';\nimport { Map, View } from 'ol';\nimport TileLayer from 'ol/layer/Tile';\nimport VectorLayer from 'ol/layer/Vector';\nimport OSM from 'ol/source/OSM';\nimport VectorSource from 'ol/source/Vector';\nimport { fromLonLat, toLonLat } from 'ol/proj';\nimport GeoJSON from 'ol/format/GeoJSON';\nimport { Circle as CircleStyle, Fill, Stroke, Style } from 'ol/style';\nimport Overlay from 'ol/Overlay';\nimport './Popup.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapView = ({\n  geoJsonData,\n  editGeoJsonData,\n  currentMode,\n  onAddIcon,\n  clearUnsavedFeature\n}) => {\n  _s();\n  const mapElement = useRef(null);\n  const map = useRef(null);\n  const editLayer = useRef(null);\n  const popupContainer = useRef(null);\n  const [unsavedFeature, setUnsavedFeature] = useState(null);\n  const [dialogContent, setDialogContent] = useState(null);\n  const [popupPosition, setPopupPosition] = useState([0, 0]);\n  const handleMapClick = useCallback(event => {\n    if (currentMode === 'edit') {\n      const coordinates = toLonLat(event.coordinate);\n      const newFeature = onAddIcon(coordinates);\n      if (unsavedFeature) {\n        const editSource = editLayer.current.getSource();\n        editSource.removeFeature(unsavedFeature);\n      }\n      setUnsavedFeature(newFeature);\n    } else if (currentMode === 'view') {\n      const features = map.current.getFeaturesAtPixel(event.pixel);\n      if (features.length > 0) {\n        const feature = features[0];\n        if (feature.get('icon') === 'red-circle') {\n          setDialogContent('Hello World');\n          const coordinate = fromLonLat(feature.getGeometry().getCoordinates());\n          setPopupPosition(coordinate);\n        } else {\n          setDialogContent(null);\n        }\n      } else {\n        setDialogContent(null);\n      }\n    }\n  }, [currentMode, onAddIcon, unsavedFeature]);\n  useEffect(() => {\n    if (!map.current && mapElement.current) {\n      map.current = new Map({\n        target: mapElement.current,\n        layers: [new TileLayer({\n          source: new OSM()\n        })],\n        view: new View({\n          center: fromLonLat([0, 0]),\n          zoom: 2\n        })\n      });\n      const overlay = new Overlay({\n        element: popupContainer.current,\n        positioning: 'bottom-center',\n        stopEvent: false,\n        offset: [0, -10]\n      });\n      map.current.addOverlay(overlay);\n    }\n  }, []);\n  useEffect(() => {\n    if (currentMode === 'edit') {\n      map.current.on('click', handleMapClick);\n    } else {\n      map.current.un('click', handleMapClick);\n      if (currentMode === 'view' && unsavedFeature) {\n        const editSource = editLayer.current.getSource();\n        editSource.removeFeature(unsavedFeature);\n        setUnsavedFeature(null);\n        clearUnsavedFeature();\n      }\n    }\n  }, [currentMode, handleMapClick, unsavedFeature, clearUnsavedFeature]);\n  useEffect(() => {\n    if (geoJsonData && map.current) {\n      const vectorSource = new VectorSource({\n        features: new GeoJSON().readFeatures(geoJsonData, {\n          featureProjection: 'EPSG:3857'\n        })\n      });\n      const vectorLayer = new VectorLayer({\n        source: vectorSource\n      });\n      map.current.addLayer(vectorLayer);\n      map.current.getView().fit(vectorSource.getExtent(), {\n        duration: 1000\n      });\n    }\n  }, [geoJsonData]);\n  useEffect(() => {\n    if (editGeoJsonData && map.current) {\n      if (editLayer.current) {\n        map.current.removeLayer(editLayer.current);\n      }\n      const editVectorSource = new VectorSource({\n        features: new GeoJSON().readFeatures(editGeoJsonData, {\n          featureProjection: 'EPSG:3857'\n        })\n      });\n      editLayer.current = new VectorLayer({\n        source: editVectorSource,\n        style: feature => {\n          if (feature.get('icon') === 'red-circle') {\n            return new Style({\n              image: new CircleStyle({\n                radius: 5,\n                fill: new Fill({\n                  color: 'red'\n                }),\n                stroke: new Stroke({\n                  color: 'white',\n                  width: 1\n                })\n              })\n            });\n          }\n        }\n      });\n      map.current.addLayer(editLayer.current);\n      map.current.getView().fit(editVectorSource.getExtent(), {\n        duration: 1000\n      });\n    }\n  }, [editGeoJsonData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapElement,\n      style: {\n        width: '1000px',\n        height: '510px',\n        backgroundColor: 'lightgray'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: popupContainer,\n      className: \"ol-popup\",\n      style: {\n        display: dialogContent ? 'block' : 'none',\n        top: `${popupPosition[1]}px`,\n        left: `${popupPosition[0]}px`\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-content\",\n        children: dialogContent && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: dialogContent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n};\n_s(MapView, \"08RIMlkIMAGSEtMlPUoj4FXi/i0=\");\n_c = MapView;\nexport default MapView;\nvar _c;\n$RefreshReg$(_c, \"MapView\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useCallback","Map","View","TileLayer","VectorLayer","OSM","VectorSource","fromLonLat","toLonLat","GeoJSON","Circle","CircleStyle","Fill","Stroke","Style","Overlay","jsxDEV","_jsxDEV","MapView","geoJsonData","editGeoJsonData","currentMode","onAddIcon","clearUnsavedFeature","_s","mapElement","map","editLayer","popupContainer","unsavedFeature","setUnsavedFeature","dialogContent","setDialogContent","popupPosition","setPopupPosition","handleMapClick","event","coordinates","coordinate","newFeature","editSource","current","getSource","removeFeature","features","getFeaturesAtPixel","pixel","length","feature","get","getGeometry","getCoordinates","target","layers","source","view","center","zoom","overlay","element","positioning","stopEvent","offset","addOverlay","on","un","vectorSource","readFeatures","featureProjection","vectorLayer","addLayer","getView","fit","getExtent","duration","removeLayer","editVectorSource","style","image","radius","fill","color","stroke","width","children","ref","height","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","className","display","top","left","_c","$RefreshReg$"],"sources":["C:/Users/Shuhaib/OneDrive/Desktop/test-codes/code-3/geojson-viewer/src/MapView.js"],"sourcesContent":["// src/MapView.js\r\n\r\nimport React, { useEffect, useRef, useState, useCallback } from 'react';\r\nimport 'ol/ol.css';\r\nimport { Map, View } from 'ol';\r\nimport TileLayer from 'ol/layer/Tile';\r\nimport VectorLayer from 'ol/layer/Vector';\r\nimport OSM from 'ol/source/OSM';\r\nimport VectorSource from 'ol/source/Vector';\r\nimport { fromLonLat, toLonLat } from 'ol/proj';\r\nimport GeoJSON from 'ol/format/GeoJSON';\r\nimport { Circle as CircleStyle, Fill, Stroke, Style } from 'ol/style';\r\nimport Overlay from 'ol/Overlay';\r\nimport './Popup.css';\r\n\r\nconst MapView = ({ geoJsonData, editGeoJsonData, currentMode, onAddIcon, clearUnsavedFeature }) => {\r\n  const mapElement = useRef(null);\r\n  const map = useRef(null);\r\n  const editLayer = useRef(null);\r\n  const popupContainer = useRef(null);\r\n  const [unsavedFeature, setUnsavedFeature] = useState(null);\r\n  const [dialogContent, setDialogContent] = useState(null);\r\n  const [popupPosition, setPopupPosition] = useState([0, 0]);\r\n\r\n  const handleMapClick = useCallback((event) => {\r\n    if (currentMode === 'edit') {\r\n      const coordinates = toLonLat(event.coordinate);\r\n      const newFeature = onAddIcon(coordinates);\r\n      if (unsavedFeature) {\r\n        const editSource = editLayer.current.getSource();\r\n        editSource.removeFeature(unsavedFeature);\r\n      }\r\n      setUnsavedFeature(newFeature);\r\n    } else if (currentMode === 'view') {\r\n      const features = map.current.getFeaturesAtPixel(event.pixel);\r\n      if (features.length > 0) {\r\n        const feature = features[0];\r\n        if (feature.get('icon') === 'red-circle') {\r\n          setDialogContent('Hello World');\r\n          const coordinate = fromLonLat(feature.getGeometry().getCoordinates());\r\n          setPopupPosition(coordinate);\r\n        } else {\r\n          setDialogContent(null);\r\n        }\r\n      } else {\r\n        setDialogContent(null);\r\n      }\r\n    }\r\n  }, [currentMode, onAddIcon, unsavedFeature]);\r\n\r\n  useEffect(() => {\r\n    if (!map.current && mapElement.current) {\r\n      map.current = new Map({\r\n        target: mapElement.current,\r\n        layers: [\r\n          new TileLayer({\r\n            source: new OSM(),\r\n          }),\r\n        ],\r\n        view: new View({\r\n          center: fromLonLat([0, 0]),\r\n          zoom: 2,\r\n        }),\r\n      });\r\n\r\n      const overlay = new Overlay({\r\n        element: popupContainer.current,\r\n        positioning: 'bottom-center',\r\n        stopEvent: false,\r\n        offset: [0, -10],\r\n      });\r\n      map.current.addOverlay(overlay);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (currentMode === 'edit') {\r\n      map.current.on('click', handleMapClick);\r\n    } else {\r\n      map.current.un('click', handleMapClick);\r\n      if (currentMode === 'view' && unsavedFeature) {\r\n        const editSource = editLayer.current.getSource();\r\n        editSource.removeFeature(unsavedFeature);\r\n        setUnsavedFeature(null);\r\n        clearUnsavedFeature();\r\n      }\r\n    }\r\n  }, [currentMode, handleMapClick, unsavedFeature, clearUnsavedFeature]);\r\n\r\n  useEffect(() => {\r\n    if (geoJsonData && map.current) {\r\n      const vectorSource = new VectorSource({\r\n        features: new GeoJSON().readFeatures(geoJsonData, {\r\n          featureProjection: 'EPSG:3857',\r\n        }),\r\n      });\r\n      const vectorLayer = new VectorLayer({\r\n        source: vectorSource,\r\n      });\r\n      map.current.addLayer(vectorLayer);\r\n      map.current.getView().fit(vectorSource.getExtent(), { duration: 1000 });\r\n    }\r\n  }, [geoJsonData]);\r\n\r\n  useEffect(() => {\r\n    if (editGeoJsonData && map.current) {\r\n      if (editLayer.current) {\r\n        map.current.removeLayer(editLayer.current);\r\n      }\r\n      const editVectorSource = new VectorSource({\r\n        features: new GeoJSON().readFeatures(editGeoJsonData, {\r\n          featureProjection: 'EPSG:3857',\r\n        }),\r\n      });\r\n      editLayer.current = new VectorLayer({\r\n        source: editVectorSource,\r\n        style: (feature) => {\r\n          if (feature.get('icon') === 'red-circle') {\r\n            return new Style({\r\n              image: new CircleStyle({\r\n                radius: 5,\r\n                fill: new Fill({ color: 'red' }),\r\n                stroke: new Stroke({ color: 'white', width: 1 }),\r\n              }),\r\n            });\r\n          }\r\n        },\r\n      });\r\n      map.current.addLayer(editLayer.current);\r\n      map.current.getView().fit(editVectorSource.getExtent(), { duration: 1000 });\r\n    }\r\n  }, [editGeoJsonData]);\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        ref={mapElement}\r\n        style={{ width: '1000px', height: '510px', backgroundColor: 'lightgray' }}\r\n      />\r\n      <div \r\n        ref={popupContainer} \r\n        className=\"ol-popup\"\r\n        style={{\r\n          display: dialogContent ? 'block' : 'none',\r\n          top: `${popupPosition[1]}px`,\r\n          left: `${popupPosition[0]}px`,\r\n        }}\r\n      >\r\n        <div className=\"popup-content\">\r\n          {dialogContent && <p>{dialogContent}</p>}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapView;\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}